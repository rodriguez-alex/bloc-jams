{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappingslpBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Blue', length: '4:26' },\n       { name: 'Green', length: '3:14' },\n       { name: 'Red', length: '5:01' },\n       { name: 'Pink', length: '3:21'},\n       { name: 'Magenta', length: '2:15'}\n     ]\n };\n \n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\n\n\nvar currentlyPlayingSong = null;\n\nvar createSongRow = function(songNumber, songName, songLength) {\n var template =\n     '<tr>'\n   + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n   + '  <td class=\"col-md-9\">' + songName + '</td>'\n   + '  <td class=\"col-md-2\">' + songLength + '</td>'\n   + '</tr>'\n   ;\n\n   var $row = $(template);\n \n   var onHover = function(event) {\n    // alert('hovered');\n    var songNumberCell = $(this).find('.song-number');\n    var songNumber = songNumberCell.data('song-number');\n    \n    if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n    }\n  };\n \n   var offHover = function(event) {\n    // alert('hovered off');\n      var songNumberCell = $(this).find('.song-number');\n      var songNumber = songNumberCell.data('song-number');\n      \n      if (songNumber !== currentlyPlayingSong) {\n        songNumberCell.html(songNumber);\n      }\n   };\n\n    // Toggle the play, pause, and song number based on the button clicked.\n  var clickHandler = function(event) {\n   var songNumber = $(this).data('song-number');\n\n   if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       var currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n \n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n\n  $row.find('.song-number').click(clickHandler);\n  $row.hover(onHover, offHover);\n   return $row;\n\n};\n\n var changeAlbumView = function(album, albumContainer) {\n   // Update the album title\n   var $albumTitle = $('.' + albumContainer + ' .album-title');\n   $albumTitle.text(album.name);\n \n   // Update the album artist\n   var $albumArtist = $('.' + albumContainer + ' .album-artist');\n   $albumArtist.text(album.artist);\n \n   // Update the meta information\n   var $albumMeta = $('.' + albumContainer + ' .album-meta-info');\n   $albumMeta.text(album.year + \" on \" + album.label);\n \n   // Update the album image\n   var $albumImage = $('.' + albumContainer + ' .album-image img');\n   $albumImage.attr('src', album.albumArtUrl);\n \n   // Update the Song List\n   var $songList = $('.' + albumContainer + ' .album-song-listing');\n   $songList.empty();\n   var songs = album.songs;\n   for (var i = 0; i < songs.length; i++) {\n     var songData = songs[i];\n     var $newRow = createSongRow(i + 1, songData.name, songData.length);\n     $songList.append($newRow);\n   }\n \n };\n\n  var updateSeekPercentage = function($seekBar, event) {\n    var barWidth = $seekBar.width();\n    var offsetX = event.pageX - $seekBar.offset().left;\n\n    var offsetXPercent = (offsetX  / barWidth) * 100;\n    offsetXPercent = Math.max(0, offsetXPercent);\n    offsetXPercent = Math.min(100, offsetXPercent);\n\n    var percentageString = offsetXPercent + '%';\n    $seekBar.find('.fill').width(percentageString);\n    $seekBar.find('.thumb').css({left: percentageString});\n  }\n\n\n// This 'if' condition is used to prevent the jQuery modifications\n// from happening on non-Album view pages.\n//  - Use a regex to validate that the url has \"/album\" in its path.\nif (document.URL.match(/\\/album.html/)) {\n   // Wait until the HTML is fully processed.\n   $(document).ready(function() {\n    changeAlbumView(albumMarconi, 'album-picasso');\n    changeAlbumView(albumPicasso, 'album-marconi');\n    setupSeekBars();\n\n    $('.album-header-container img').on('click', function(){\n      $('.album-container').toggleClass('active');\n    });\n   }); //end document ready\n }\n\n  var setupSeekBars = function() {\n \n   $seekBars = $('.player-bar .seek-bar');\n   $seekBars.click(function(event) {\n     updateSeekPercentage($(this), event);\n   });\n\n   $seekBars.find('.thumb').mousedown(function(event){\n      var $seekBar = $(this).parent();\n\n      $seekBar.addClass('no-animate');\n   \n      $(document).bind('mousemove.thumb', function(event){\n        updateSeekPercentage($seekBar, event);\n      });\n   \n      //cleanup\n      $(document).bind('mouseup.thumb', function(){\n        $seekBar.removeClass('no-animate');\n        $(document).unbind('mousemove.thumb');\n        $(document).unbind('mouseup.thumb');\n      });\n   \n    }); //mousedown\n \n };","//require('./landing');\n//require('./album');\n//require('./collection');\n//require('./profile');\n\n// Example album.\n var albumPicasso = {\n\t name: 'The Colors',\n\t artist: 'Pablo Picasso',\n\t label: 'Cubism',\n\t year: '1881',\n\t albumArtUrl: '/images/album-placeholder.png',\n\n\t songs: [\n\t\t\t { name: 'Blue', length: 163.38, audioUrl: '/music/placeholders/blue' },\n\t\t\t{ name: 'Green', length: 105.66 , audioUrl: '/music/placeholders/green' },\n\t\t\t{ name: 'Red', length: 270.14, audioUrl: '/music/placeholders/red' },\n\t\t\t{ name: 'Pink', length: 154.81, audioUrl: '/music/placeholders/pink' },\n\t\t\t{ name: 'Magenta', length: 375.92, audioUrl: '/music/placeholders/magenta' }\n\t\t ]\n };\n\n\n blocJams = angular.module('BlocJams', ['ui.router']);\n\n\nblocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\n\t $locationProvider.html5Mode(true);\n\n\t $stateProvider.state('landing', {\n\t\t url: '/',\n\t\t controller: 'Landing.controller',\n\t\t templateUrl: '/templates/landing.html'\n\t });\n\n\t $stateProvider.state('song', {\n\t\t url: '/song',\n\t\t controller: 'Landing.controller',\n\t\t templateUrl: '/templates/song.html'\n\t });\n\n\t $stateProvider.state('collection', {\n\t\t url: '/collection',\n\t\t controller: 'Collection.controller',\n\t\t templateUrl: '/templates/collection.html'\n\t });\n\n\t $stateProvider.state('album', {\n\t\turl: '/album',\n\t\ttemplateUrl: '/templates/album.html',\n\t\tcontroller: 'Album.controller'\n\t });\n\n\t $stateProvider.state('charts', {\n\t\turl: '/charts',\n\t\ttemplateUrl: '/templates/charts.html',\n\t\tcontroller: 'Charts.controller'\n\t });\n\n\n }]);\n\n\n\n\n\nblocJams.controller('Charts.controller', ['$scope', 'ConsoleLogger', 'Metric', '$rootScope', function($scope, ConsoleLogger, Metric, $rootScope){\n\n\tConsoleLogger.log();\n\n\t$scope.metric = Metric;\n\n\tMetric.onClickUpdate(function(event, clickedBtns){\n\t\tif(document.getElementById('myChart')) {\n\t\t\t$scope.makeGraph();\n\t\t}\n\t});\n\n\t$scope.makeGraph = function(){\n\n\t\tvar dataGraph = {\n\t\t\tlabels: [\"Play\", \"pause\", \"pause\", \"prev\"],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"My First dataset\",\n\t\t\t\t\tfillColor: \"rgba(220,220,220,0.2)\",\n\t\t\t\t\tstrokeColor: \"rgba(220,220,220,1)\",\n\t\t\t\t\tpointColor: \"rgba(220,220,220,1)\",\n\t\t\t\t\tpointStrokeColor: \"#fff\",\n\t\t\t\t\tpointHighlightFill: \"#fff\",\n\t\t\t\t\tpointHighlightStroke: \"rgba(220,220,220,1)\",\n\t\t\t\t\tdata: [$scope.clickedBtns.play, $scope.clickedBtns.pause, $scope.clickedBtns.prev, $scope.clickedBtns.nxt]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tvar ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n\t\tvar myNewChart = new Chart(ctx).Radar(dataGraph, {\n\t\t\tresponsive: true\n\t\t});\n\n\t};\n\n\t$scope.makeGraph();\n\t\n}]);\n\n\n\n\n\nblocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', 'ConsoleLogger', 'Metric', function($scope, SongPlayer, ConsoleLogger, Metric) {\n\t$scope.songPlayer = SongPlayer;\n\t$scope.consoleLogger = ConsoleLogger;\n\n\t$scope.play = function(){\n\t\tSongPlayer.play(); \n\t\tMetric.logData_click('play');\n\t};\n\n\t$scope.pause = function(){\n\t\tSongPlayer.pause();\n\t\tMetric.logData_click('pause');\n\t};\n\n\t$scope.next = function(){\n\t\tSongPlayer.next();\n\t\tMetric.logData_click('next');\n\t};\n\n\t$scope.prev = function(){\n\t\tSongPlayer.previous();\n\t\tMetric.logData_click('prev');\n\t};\n\t\n\t $scope.volumeClass = function() {\n\t\t return {\n\t\t\t'fa-volume-off': SongPlayer.volume == 0,\n\t\t\t'fa-volume-down': SongPlayer.volume <= 70 && SongPlayer.volume > 0,\n\t\t\t'fa-volume-up': SongPlayer.volume > 70\n\t\t};\n\t}\n\n\tSongPlayer.onTimeUpdate(function(event, time){\n\t\t$scope.$apply(function(){\n\t\t\t$scope.playTime = time;\n\t\t});\n\t});\n\n\tConsoleLogger.log();\n}]);\n\n\n\n\n\n\n\n\nblocJams.controller('Collection.controller', ['$scope', 'ConsoleLogger', 'SongPlayer', function($scope, ConsoleLogger, SongPlayer){\n\n\tConsoleLogger.log();\n\n\t$scope.albums = [];\n\t$scope.showOverlay = true;\n\n\tfor (var i = 0; i < 33; i++) {\n\t\t $scope.albums.push(angular.copy(albumPicasso));\n\t }\n\n\t $scope.playAlbum = function(album){\n\t\t SongPlayer.setSong(album, album.songs[0]); // Targets first song in the array.\n\t }\n\n}]);\n\n\n\n\n\n\nblocJams.controller('Landing.controller', ['$scope', 'ConsoleLogger', function($scope, ConsoleLogger) {\n\n\tConsoleLogger.log();\n\n\t$scope.pageTitle = \"//Bloc Jams\";\n\t$scope.subText = \"Turn the music up!\";\n\n\t$scope.albumURLs = [\n\t\t'/images/album-placeholders/album-1.jpg',\n\t\t'/images/album-placeholders/album-2.jpg',\n\t\t'/images/album-placeholders/album-3.jpg',\n\t\t'/images/album-placeholders/album-4.jpg',\n\t\t'/images/album-placeholders/album-5.jpg',\n\t\t'/images/album-placeholders/album-6.jpg',\n\t\t'/images/album-placeholders/album-7.jpg',\n\t\t'/images/album-placeholders/album-8.jpg',\n\t\t'/images/album-placeholders/album-9.jpg',\n\t];\n\n\t$scope.subTextClicked = function() {\n\t\t $scope.subText += '!';\n\t };\n\n\n\t$scope.extraCoins = function(){\n\n\t\t$scope.randomURLS = $scope.setFunctions.shuffle($scope.albumURLs);\n\t};\n\n\n\t$scope.setFunctions = {\n\n\t\tshuffle: function(o){  //v1.0\n\t\t\t\tfor(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n\t\t\t\treturn o;\n\t\t}\n\n\t}\n}]); //Landing.controller\n\n\n\n\n\n\n\n\n\nblocJams.controller('Album.controller', ['$scope', 'SongPlayer', 'ConsoleLogger', function($scope, SongPlayer, ConsoleLogger){\n\n\tConsoleLogger.log();\n\n\t $scope.album = angular.copy(albumPicasso);\n\n\t var hoveredSong = null;\n\n\t $scope.onHoverSong = function(song) {\n\t\t hoveredSong = song;\n\t };\n\n\t $scope.offHoverSong = function(song) {\n\t\t hoveredSong = null;\n\t };\n\n\t $scope.getSongState = function(song) {\n\t\t if (song === SongPlayer.currentSong && SongPlayer.playing) {\n\t\t\t return 'playing';\n\t\t }\n\t\t else if (song === hoveredSong) {\n\t\t\t return 'hovered';\n\t\t }\n\t\t return 'default';\n\t };\n\n\t\t$scope.playSong = function(song) {\n\t\t\tSongPlayer.setSong($scope.album, song);\n\t\t};\n\n\t\t$scope.pauseSong = function(song) {\n\t\t\tplayingSong = null;\n\t\t};\n\n\n }]); //Album.controller\n\n\n\n\n\n\n/*-------------------------\n\n\nSERVICES\n\n\n--------------------------*/\n\n\nblocJams.service('SongPlayer', ['$rootScope', function($rootScope) {\n\tvar currentSoundFile = null;\n\n\n\tvar trackIndex = function(album, song){\n\t\t//console.log(album);\n\t\treturn album.songs.indexOf(song);\n\t};\n\n\n\treturn {\n\t\tcurrentSong: null,\n\t\tcurrentAlbum: null,\n\t\tplaying: false,\n\t\tvolume: 90,\n\t\tprevVolume: null,\n\n\t\tplay: function() {\n\t\t\tthis.playing = true;\n\t\t\tcurrentSoundFile.play();\n\t\t},\n\t\tpause: function() {\n\t\t\tthis.playing = false;\n\t\t\tcurrentSoundFile.pause();\n\t\t},\n\t\tseek: function(time) {\n\t\t\t // Checks to make sure that a sound file is playing before seeking.\n\t\t\t if(currentSoundFile) {\n\t\t\t\t // Uses a Buzz method to set the time of the song.\n\t\t\t\t currentSoundFile.setTime(time);\n\t\t\t }\n\t\t },\n\t\tonTimeUpdate: function(callback){\n\t\t\treturn $rootScope.$on('sound:timeupdate', callback);\n\t\t},\n\t\tsetVolume: function(volume) {\n\t\t\tif(currentSoundFile){\n\t\t\t\tcurrentSoundFile.setVolume(volume);\n\t\t\t}\n\t\t\tthis.volume = volume;\n\t\t},\n\t\tmuteToggle: function(){\n\n\t\t\t//stored previous value\n\t\t\tif(this.prevVolume === null){\n\t\t\t\tthis.prevVolume = this.volume;\n\t\t\t}\n\n\t\t\t//if the volume is 0, then we want to revert to the original volume\n\t\t\tif(this.volume == 0){\n\n\t\t\t\tconsole.log('setting it back to old value which is ' + this.prevVolume);\n\t\t\t\tthis.volume = this.prevVolume;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.volume = 0;\n\t\t\t}\n\n\t\t\t//if song is playing, let's set the volume to 0\n\t\t\tif(currentSoundFile){\n\t\t\t\tcurrentSoundFile.setVolume(this.volume);\n\t\t\t}\n\t\t},\n\t\tsetSong: function(album, song) {\n\t\t\tif (currentSoundFile) {\n\t\t\t\tcurrentSoundFile.stop();\n\t\t\t}\n\n\t\t\tthis.currentAlbum = album;\n\t\t\tthis.currentSong = song;\n\n\t\t\tcurrentSoundFile = new buzz.sound(song.audioUrl, {\n\t\t\t\tformats: [ \"mp3\" ],\n\t\t\t\tpreload: true\n\t\t\t});\n\n\t\t\tcurrentSoundFile.setVolume(this.volume);\n\n\t\t\tcurrentSoundFile.bind('timeupdate', function(e){\n\t\t\t\t$rootScope.$broadcast('sound:timeupdate', this.getTime());\n\t\t\t});\n\n\t\t\tthis.play();\n\n\t\t},\n\t\tnext: function(){\n\t\t\tvar currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n\t\t\tcurrentTrackIndex++;\n\n\t\t\tif(currentTrackIndex >= this.currentAlbum.songs.length){\n\n\t\t\t\tthis.playing = false;\n\t\t\t\tthis.currentSong = null;\n\t\t\t\tthis.currentAlbum = null;\n\n\t\t\t\tcurrentSoundFile.pause();\n\t\t\t\tcurrentSoundFile = null;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar song = this.currentAlbum.songs[currentTrackIndex];\n\t\t\tthis.setSong(this.currentAlbum, song);\n\n\t\t\tthis.currentSong = this.currentAlbum.songs[currentTrackIndex];\n\t\t},\n\t\tprevious: function(){\n\t\t\tvar currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n\t\t\tcurrentTrackIndex--;\n\n\t\t\tif(currentTrackIndex < 0) {\n\t\t\t\tthis.playing = false;\n\t\t\t\tthis.currentSong = null;\n\t\t\t\tthis.currentAlbum = null;\n\n\t\t\t\tcurrentSoundFile.pause();\n\t\t\t\tcurrentSoundFile = null;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar song = this.currentAlbum.songs[currentTrackIndex];\n\t\t\tthis.setSong(this.currentAlbum, song);\n\n\t\t\tthis.currentSong  = this.currentAlbum.songs[currentTrackIndex];\n\t\t}\n\t};\n}]);\n\n\n\n\nblocJams.service('ConsoleLogger', function() {\n\treturn {\n\t\tstring: 'hello world',\n\t\tlog: function(){\n\t\t\tconsole.log(this.string);\n\t\t}\n\t}\n});\n\n\n\n// Create a Metric Service.\nblocJams.service('Metric', ['$rootScope', function($rootScope) {\n\n\t$rootScope.songPlays = [];\n\t$rootScope.clickedBtns = {\n\t\tpause: 0,\n\t\tplay: 0,\n\t\tnxt: 0,\n\t\tprev: 0,\n\t\tmute: 0,\n\t\tvolumeAdjust: 0\n\t};\n\n\treturn {\n\t\tbtn_pause: 0,\n\t\tbtn_play: 0,\n\t\tbtn_prev: 0,\n\t\tbtn_nxt: 0,\n\n\t\t// Function that records a metric object by pushing it to our $rootScope array.\n\t\tregisterSongPlay: function(songObj) {\n\t\t\t// Add time to event register.\n\t\t\tsongObj['playedAt'] = new Date();\n\t\t\t$rootScope.songPlays.push(songObj);\n\t\t},\n\t\tlistSongsPlayed: function() {\n\t\t\tvar songs = [];\n\t\t\tangular.forEach($rootScope.songPlays, function(song) {\n\t\t\t\t// Check to make sure the song isn't added twice.\n\t\t\t\tif (songs.indexOf(song.name) != -1) {\n\t\t\t\t\tsongs.push(song.name);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn songs;\n\t\t},\n\t\tlogData_click: function(elementClicked){\n\n\t\t\tswitch(elementClicked){\n\t\t\t\tcase 'pause':\n\t\t\t\t\t$rootScope.clickedBtns.pause = this.btn_pause+1;\n\n\t\t\t\t\tthis.btn_pause = this.btn_pause+1;\n\n\t\t\t\t\t$rootScope.$broadcast('btn:click', $rootScope.clickedBtns);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'play':\n\t\t\t\t\t$rootScope.clickedBtns.play = this.btn_play+1;\n\n\t\t\t\t\tthis.btn_play = this.btn_play+1;\n\n\t\t\t\t\t$rootScope.$broadcast('btn:click', $rootScope.clickedBtns);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'nxt':\n\t\t\t\t\t$rootScope.clickedBtns.nxt = this.btn_nxt+1;\n\n\t\t\t\t\tthis.btn_nxt = this.btn_nxt+1;\n\n\t\t\t\t\t$rootScope.$broadcast('btn:click', $rootScope.clickedBtns);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'prev': \n\t\t\t\t\t$rootScope.clickedBtns.prev = this.btn_prev+1;\n\n\t\t\t\t\tthis.btn_prev = this.btn_prev+1;\n\n\t\t\t\t\t$rootScope.$broadcast('btn:click', $rootScope.clickedBtns);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t},\n\n\t\tonClickUpdate: function(callback){\n\t\t\treturn $rootScope.$on('btn:click', callback);\n\t\t},\n\n\t};\n\n}]);\n\n\n\n// var audio = 'http://lso.co.uk/images/LSO0092ex2b.mp3';\n\n//       var fadeInOut = function(audioClip){\n\n//         var song = new buzz.sound(audioClip).play().fadeIn(function(){\n//           setTimeout(fadeSongOut, 5000)\n//         });\n\n//         var fadeSongOut = function () {\n//           song.fadeOut();\n//         }\n\n//       };//\n\n//       fadeInOut(audio);\n\n\n\n/*-------------------------\n\n\nDIRECTIVES\n\n\n--------------------------*/\nblocJams.directive('slider', ['$document',  function($document){\n\n\t// Returns a number between 0 and 1 to determine where the mouse event happened along the slider bar.\n\t var calculateSliderPercentFromMouseEvent = function($slider, event) {\n\t\t var offsetX =  event.pageX - $slider.offset().left; // Distance from left\n\t\t var sliderWidth = $slider.width(); // Width of slider\n\t\t var offsetXPercent = (offsetX  / sliderWidth);\n\t\t offsetXPercent = Math.max(0, offsetXPercent);\n\t\t offsetXPercent = Math.min(1, offsetXPercent);\n\t\t return offsetXPercent;\n\t };\n\n\t var numberFromValue = function(value, defaultValue) {\n\t\t if (typeof value === 'number') {\n\t\t\t return value;\n\t\t }\n \n\t\t if(typeof value === 'undefined') {\n\t\t\t return defaultValue;\n\t\t }\n \n\t\t if(typeof value === 'string') {\n\t\t\t return Number(value);\n\t\t }\n\t };\n\n\t return {\n\t\t templateUrl: '/templates/directives/slider.html', // We'll create these files shortly.\n\t\t replace: true,\n\t\t scope: {\n\t\t\tonChange: '&'\n\t\t }, // Creates a scope that exists only in this directive.\n\t\t restrict: 'E',\n\t\t link: function(scope, element, attributes) {\n\n\t\t\tscope.value = 0;\n\n\t\t\tscope.max = 100;\n\t\t\tvar $seekBar = $(element);\n\t\n\t\t\tattributes.$observe('value', function(newValue) {\n\t\t\t\tscope.value = numberFromValue(newValue, 0);\n\t\t\t});\n \n\t\t\tattributes.$observe('max', function(newValue) {\n\t\t\t\tscope.max = numberFromValue(newValue, 100) || 100;\n\t\t\t});\n\n\n\t\t\tvar percentString = function () {\n\t\t\t\t var value = scope.value || 0;\n\t\t\t\t\tvar max = scope.max || 100;\n\t\t\t\t\tpercent = value / max * 100;\n\t\t\t\t\treturn percent + \"%\";\n\t\t\t }\n \n\t\t\t scope.fillStyle = function() {\n\t\t\t\t return {width: percentString()};\n\t\t\t }\n \n\t\t\t scope.thumbStyle = function() {\n\t\t\t\t return {left: percentString()};\n\t\t\t }\n\n\t\t\t scope.onClickSlider = function(event) {\n\t\t\t\t var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n\t\t\t\t scope.value = percent * scope.max;\n\t\t\t\t notifyCallback(scope.value);\n\t\t\t }\n\n\t\t\t scope.a12 = function() {\n\t\t\t\t $document.bind('mousemove.thumb', function(event){\n\t\t\t\t\t var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n\t\t\t\t\t scope.$apply(function(){\n\t\t\t\t\t\t scope.value = percent * scope.max;\n\t\t\t\t\t\t notifyCallback(scope.value);\n\t\t\t\t\t });\n\t\t\t\t });\n \n\t\t\t\t //cleanup\n\t\t\t\t $document.bind('mouseup.thumb', function(){\n\t\t\t\t\t $document.unbind('mousemove.thumb');\n\t\t\t\t\t $document.unbind('mouseup.thumb');\n\t\t\t\t });\n\t\t\t };\n\n\t\t\tvar notifyCallback = function(newValue) {\n\t\t\t\t if(typeof scope.onChange === 'function') {\n\t\t\t\t\t scope.onChange({value: newValue});\n\t\t\t\t }\n\t\t\t };\n\n\t\t}\n\t}// link\n\n}]);\n\n\n\n\n\n/*-------------------------\n\n\nFILTERS\n\n\n--------------------------*/\n blocJams.filter('timecode', function(){\n\t return function(seconds) {\n\t\t seconds = Number.parseFloat(seconds);\n \n\t\t // Returned when no time is provided.\n\t\t if (Number.isNaN(seconds)) {\n\t\t\t return '-:--';\n\t\t }\n \n\t\t // make it a whole number\n\t\t var wholeSeconds = Math.floor(seconds);\n \n\t\t var minutes = Math.floor(wholeSeconds / 60);\n \n\t\t remainingSeconds = wholeSeconds % 60;\n \n\t\t var output = minutes + ':';\n \n\t\t // zero pad seconds, so 9 seconds should be :09\n\t\t if (remainingSeconds < 10) {\n\t\t\t output += '0';\n\t\t }\n \n\t\t output += remainingSeconds;\n \n\t\t return output;\n\t }\n })\n\n\n"," var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n      + '  <div class=\"collection-album-image-container\">'\n     + '    <img src=\"/images/album-placeholder.png\"/>'\n     + '  </div>'\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '       X:XX Total Length'\n      + '    </p>'\n      + '  </div>'\n      + '</div>';\n \n   return $(template);\n };\n\n var buildAlbumOverlay = function(albumURL) {\n    var template =\n        '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>'\n      ;\n    return $(template);\n  };\n\n\n var updateCollectionView = function() {\n   var $collection = $(\".collection-container .row\");\n   $collection.empty();\n\n   var randomNum = Math.floor(Math.random() * 76  + 25);\n\n   for (var i = 0; i < randomNum; i++) {\n     var $newThumbnail = buildAlbumThumbnail();\n     $collection.append($newThumbnail);\n   }\n\n   var onHover = function(event) {\n     $(this).append(buildAlbumOverlay(\"/album.html\"));\n   };\n\n   var offHover = function(event) {\n    $(this).find('.collection-album-image-overlay').remove();\n  };\n\n   $collection.find('.collection-album-image-container').hover(onHover, offHover);\n };\n\n if (document.URL.match(/\\/collection.html/)) {\n   // Wait until the HTML is fully processed.\n   $(document).ready(function() {\n      updateCollectionView();\n   });\n }","$(document).ready(function() { \n   $('.hero-content h3').click(function(){\n      console.log(\"hello!\");\n      subText = $(this).text();\n      $(this).text(subText + \"!\");\n   });\n\n   var onHoverAction = function(event) {\n    console.log(event);\n     console.log('Hover action triggered.');\n     $(this).animate({'margin-top': '10px'});\n   };\n \n   var offHoverAction = function(event) {\n     console.log('Off-hover action triggered.');\n     $(this).animate({'margin-top': '0px'});\n   };\n \n   $('.selling-points .point').hover(onHoverAction, offHoverAction);\n});","// holds the name of our tab button container for selection later in the function\nvar tabsContainer = \".user-profile-tabs-container\";\n\nvar selectTabHandler = function(event) {\n  $tab = $(this);\n  $(tabsContainer + \" li\").removeClass('active');\n  $tab.parent().addClass('active');\n  selectedTabName = $tab.attr('href');\n  console.log(selectedTabName);\n  $(\".tab-pane\").addClass('hidden');\n  $(selectedTabName).removeClass('hidden');\n  event.preventDefault();\n};\n\nif (document.URL.match(/\\/profile.html/)) {\n   $(document).ready(function() {\n     var $tabs = $(tabsContainer + \" a\");\n     $tabs.click(selectTabHandler);\n     $tabs[0].click();\n   });\n }"]}